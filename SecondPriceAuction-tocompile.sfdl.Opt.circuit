// /** 
//  * Performs a 2nd price auction between 4 bidders.  
//  * At the end only the winning bidder and the seller know the identity of the winner
//  * Everyone knows the 2nd highest price, 
//  * Nothing else is known to anyone.
//  **/
// program SecondPriceAuction{
//   const nBidders = 4;
//   type Bid = Int<4>; // enough bits to represent a small bid.
//   type WinningBidder = Int<3>; // enough bits to represent a winner (nBitters bits).
//   
//   type SellerOutput = struct{WinningBidder winner, Bid winningPrice};
//   type Seller = struct{SellerOutput output}; // Seller has no input
//   
//   type BidderOutput = struct{Boolean win, Bid winningPrice};
//   type Bidder = struct{Bid input, BidderOutput output};
// 
//   function void main(Seller seller, Bidder[nBidders] bidder){
//     var Bid high;
//     var Bid second;
//     var WinningBidder winner;
//     winner = 0; high = bidder[0].input; second = 0;
//    
//     // Making the auction. 
//     for(i=1 to nBidders-1){
//       if(bidder[i].input > high){
//         winner = i;
//         second = high;
//         high = bidder[i].input;
//       }
// 		else {
// 			if(bidder[i].input > second)
// 				second = bidder[i].input;
// 		}
//     }
//  
//     // Setting the result.
//     seller.output.winner = winner;
//     seller.output.winningPrice = second;
//     for(i=0 to nBidders-1){
//       bidder[i].output.win = (winner == i);
//       bidder[i].output.winningPrice = second;
//     }
//   }
// }
0 gate arity 0 table [ 0 ] inputs [ ]		//CONST 0 , winner.$2(4) , seller.output.winner.$2(0) []
1 gate arity 0 table [ 1 ] inputs [ ]		//CONST 1 []
// --------------- EOF ------------------
// ---------------- BEFORE: (v0.bitSize+v1.bitSize)
// ---------------- After: (v0.bitSize+v1.bitSize) Pins: [ 0 ]
// ---------------- BEFORE: (v0.bitSize+v1.bitSize)
// ---------------- After: (v0.bitSize+v1.bitSize) Pins: [ 0 ]
// SFDL file for Program: SecondPriceAuction
2 input		//bidder[0].input.$0(0) , high.$0(0) , second.$0(1) , bidder[0].input.$0(1) [35, 23, 31]
3 input		//bidder[0].input.$1(0) , high.$1(0) , second.$1(1) , bidder[0].input.$1(1) [32, 36, 24]
4 input		//bidder[0].input.$2(0) , high.$2(0) , second.$2(1) , bidder[0].input.$2(1) [33, 37, 25]
5 input		//bidder[0].input.$3(0) , high.$3(0) , second.$3(1) , bidder[0].input.$3(1) [34, 38, 26]
6 input		//bidder[1].input.$0(0) , bidder[i].input.$0(0) , high.$0(1) , second.$0(2) , bidder[1].input.$0(1) [19, 18, 23, 27, 31]
7 input		//bidder[1].input.$1(0) , bidder[i].input.$1(0) , high.$1(1) , second.$1(2) , bidder[1].input.$1(1) [19, 32, 18, 28]
8 input		//bidder[1].input.$2(0) , bidder[i].input.$2(0) , high.$2(1) , second.$2(2) , bidder[1].input.$2(1) [33, 21, 20, 29]
9 input		//bidder[1].input.$3(0) , bidder[i].input.$3(0) , high.$3(1) , second.$3(2) , bidder[1].input.$3(1) [34, 22, 30]
10 input		//bidder[2].input.$0(0) , bidder[i].input.$0(0) , high.$0(2) , second.$0(4) , bidder[2].input.$0(1) [48, 39, 52, 40, 57, 44]
11 input		//bidder[2].input.$1(0) , bidder[i].input.$1(0) , high.$1(2) , second.$1(4) , bidder[2].input.$1(1) [39, 53, 58, 40]
12 input		//bidder[2].input.$2(0) , bidder[i].input.$2(0) , high.$2(2) , second.$2(4) , bidder[2].input.$2(1) [54, 42, 59, 41]
13 input		//bidder[2].input.$3(0) , bidder[i].input.$3(0) , high.$3(2) , second.$3(4) , bidder[2].input.$3(1) [55, 43, 60]
14 input		//bidder[3].input.$0(0) , bidder[i].input.$0(0) , high.$0(3) , second.$0(6) , bidder[3].input.$0(1) [70, 65, 66, 78, 74]
15 input		//bidder[3].input.$1(0) , bidder[i].input.$1(0) , high.$1(3) , second.$1(6) , bidder[3].input.$1(1) [65, 66, 79]
16 input		//bidder[3].input.$2(0) , bidder[i].input.$2(0) , high.$2(3) , second.$2(6) , bidder[3].input.$2(1) [68, 80, 67]
17 input		//bidder[3].input.$3(0) , bidder[i].input.$3(0) , high.$3(3) , second.$3(6) , bidder[3].input.$3(1) [69, 81]
// ---------------- Assign: winner = 0
// ---------------- Assign: high = bidder[0].input
// ---------------- Assign: second = 0
// ---------------- BEFORE: (nBidders+(-1))
// ---------------- After: (nBidders+(-1)) Pins: [ 1 1 0 ]
// ---------------- BEFORE: (high+(-bidder[i].input))
18 gate arity 2 table [ 0 1 1 0 ] inputs [ 7 6 ]		// [24]
19 gate arity 2 table [ 0 1 1 1 ] inputs [ 7 6 ]		// [21, 20]
20 gate arity 2 table [ 0 1 1 0 ] inputs [ 8 19 ]		// [25]
21 gate arity 2 table [ 0 1 1 1 ] inputs [ 8 19 ]		// [22]
22 gate arity 2 table [ 0 1 1 0 ] inputs [ 9 21 ]		// [27, 26, 29, 28, 30]
23 gate arity 2 table [ 0 0 0 1 ] inputs [ 6 2 ]		// [24]
24 gate arity 3 table [ 0 0 0 1 0 1 1 1 ] inputs [ 23 18 3 ]		// [25]
25 gate arity 3 table [ 0 0 0 1 0 1 1 1 ] inputs [ 24 20 4 ]		// [26]
26 gate arity 3 table [ 0 1 1 0 1 0 0 1 ] inputs [ 25 22 5 ]		// [34, 35, 32, 33, 38, 36, 37, 56, 31]
27 gate arity 2 table [ 0 0 0 1 ] inputs [ 6 22 ]		// [35]
28 gate arity 2 table [ 0 0 0 1 ] inputs [ 7 22 ]		// [36]
29 gate arity 2 table [ 0 0 0 1 ] inputs [ 8 22 ]		// [37]
30 gate arity 2 table [ 0 0 0 1 ] inputs [ 9 22 ]		// [38]
31 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 2 6 26 ]		//high.$0(2) , second.$0(3) [57, 44, 61]
32 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 3 7 26 ]		//high.$1(2) , second.$1(3) [58, 62, 45]
33 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 4 8 26 ]		//high.$2(2) , second.$2(3) [59, 46, 63]
// ---------------- After: (high+(-bidder[i].input)) Pins: [ 26 28 30 32 ]
// ---------------- Assign: winner = i
// ---------------- Assign: second = high
// ---------------- Assign: high = bidder[i].input
// ---------------- BEFORE: (second+(-bidder[i].input))
34 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 5 9 26 ]		//high.$3(2) , second.$3(3) [64, 47, 60]
35 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 27 2 26 ]		//second.$0(4) [48, 52]
36 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 28 3 26 ]		//second.$1(4) [49, 53]
37 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 29 4 26 ]		//second.$2(4) [50, 54]
38 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 30 5 26 ]		//second.$3(4) [51, 55]
39 gate arity 2 table [ 0 1 1 0 ] inputs [ 11 10 ]		// [49, 45]
40 gate arity 2 table [ 0 1 1 1 ] inputs [ 11 10 ]		// [42, 41]
41 gate arity 2 table [ 0 1 1 0 ] inputs [ 12 40 ]		// [50, 46]
42 gate arity 2 table [ 0 1 1 1 ] inputs [ 12 40 ]		// [43]
43 gate arity 2 table [ 0 1 1 0 ] inputs [ 13 42 ]		// [51, 47]
44 gate arity 2 table [ 0 0 0 1 ] inputs [ 10 31 ]		// [45]
45 gate arity 3 table [ 0 0 0 1 0 1 1 1 ] inputs [ 44 39 32 ]		// [46]
46 gate arity 3 table [ 0 0 0 1 0 1 1 1 ] inputs [ 45 41 33 ]		// [47]
47 gate arity 3 table [ 0 1 1 0 1 0 0 1 ] inputs [ 46 43 34 ]		// [64, 83, 59, 58, 57, 56, 63, 62, 61, 60]
48 gate arity 2 table [ 0 0 0 1 ] inputs [ 10 35 ]		// [49]
49 gate arity 3 table [ 0 0 0 1 0 1 1 1 ] inputs [ 48 39 36 ]		// [50]
// ---------------- After: (second+(-bidder[i].input)) Pins: [ 42 44 46 48 ]
// ---------------- Assign: second = bidder[i].input
50 gate arity 3 table [ 0 0 0 1 0 1 1 1 ] inputs [ 49 41 37 ]		// [51]
51 gate arity 3 table [ 0 1 1 0 1 0 0 1 ] inputs [ 50 43 38 ]		// [55, 54, 53, 52]
52 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 35 10 51 ]		// [61]
53 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 36 11 51 ]		// [62]
54 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 37 12 51 ]		// [63]
55 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 38 13 51 ]		// [64]
56 gate arity 2 table [ 0 1 0 0 ] inputs [ 26 47 ]		// [82]
57 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 31 10 47 ]		//high.$0(3) , second.$0(5) [84, 70]
58 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 32 11 47 ]		//high.$1(3) , second.$1(5) [85, 71]
59 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 33 12 47 ]		//high.$2(3) , second.$2(5) [86, 72]
60 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 34 13 47 ]		//high.$3(3) , second.$3(5) [87, 73]
61 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 52 31 47 ]		//second.$0(6) [78, 74]
62 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 53 32 47 ]		//second.$1(6) [79, 75]
// ---------------- BEFORE: (high+(-bidder[i].input))
63 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 54 33 47 ]		//second.$2(6) [80, 76]
64 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 55 34 47 ]		//second.$3(6) [81, 77]
65 gate arity 2 table [ 0 1 1 0 ] inputs [ 15 14 ]		// [71, 75]
66 gate arity 2 table [ 0 1 1 1 ] inputs [ 15 14 ]		// [68, 67]
67 gate arity 2 table [ 0 1 1 0 ] inputs [ 16 66 ]		// [76, 72]
68 gate arity 2 table [ 0 1 1 1 ] inputs [ 16 66 ]		// [69]
69 gate arity 2 table [ 0 1 1 0 ] inputs [ 17 68 ]		// [77, 73]
70 gate arity 2 table [ 0 0 0 1 ] inputs [ 14 57 ]		// [71]
71 gate arity 3 table [ 0 0 0 1 0 1 1 1 ] inputs [ 70 65 58 ]		// [72]
72 gate arity 3 table [ 0 0 0 1 0 1 1 1 ] inputs [ 71 67 59 ]		// [73]
73 gate arity 3 table [ 0 1 1 0 1 0 0 1 ] inputs [ 72 69 60 ]		// [85, 84, 87, 86, 83, 82]
74 gate arity 2 table [ 0 0 0 1 ] inputs [ 14 61 ]		// [75]
75 gate arity 3 table [ 0 0 0 1 0 1 1 1 ] inputs [ 74 65 62 ]		// [76]
76 gate arity 3 table [ 0 0 0 1 0 1 1 1 ] inputs [ 75 67 63 ]		// [77]
77 gate arity 3 table [ 0 1 1 0 1 0 0 1 ] inputs [ 76 69 64 ]		// [81, 80, 78, 79]
78 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 61 14 77 ]		// [84]
// ---------------- After: (high+(-bidder[i].input)) Pins: [ 71 73 75 77 ]
// ---------------- Assign: winner = i
// ---------------- Assign: second = high
// ---------------- Assign: high = bidder[i].input
// ---------------- BEFORE: (second+(-bidder[i].input))
79 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 62 15 77 ]		// [85]
80 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 63 16 77 ]		// [86]
81 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 64 17 77 ]		// [87]
82 gate arity 2 table [ 0 1 1 1 ] inputs [ 56 73 ]		// [89, 88, 91, 90]
83 gate arity 2 table [ 0 1 1 1 ] inputs [ 47 73 ]		// [89, 88, 91, 90]
84 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 78 57 73 ]		//second.$0(7) , seller.output.winningPrice.$0(1) , bidder[0].output.winningPrice.$0(1) , bidder[1].output.winningPrice.$0(3) , bidder[0].output.winningPrice.$0(4) , bidder[1].output.winningPrice.$0(4) , bidder[0].output.winningPrice.$0(5) , bidder[1].output.winningPrice.$0(5) , bidder[2].output.winningPrice.$0(5) , bidder[0].output.winningPrice.$0(6) , bidder[1].output.winningPrice.$0(6) , bidder[2].output.winningPrice.$0(6) , bidder[0].output.winningPrice.$0(7) , bidder[1].output.winningPrice.$0(7) , bidder[2].output.winningPrice.$0(7) , bidder[3].output.winningPrice.$0(7) []
85 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 79 58 73 ]		//second.$1(7) , seller.output.winningPrice.$1(1) , bidder[0].output.winningPrice.$1(1) , bidder[1].output.winningPrice.$1(3) , bidder[0].output.winningPrice.$1(4) , bidder[1].output.winningPrice.$1(4) , bidder[0].output.winningPrice.$1(5) , bidder[1].output.winningPrice.$1(5) , bidder[2].output.winningPrice.$1(5) , bidder[0].output.winningPrice.$1(6) , bidder[1].output.winningPrice.$1(6) , bidder[2].output.winningPrice.$1(6) , bidder[0].output.winningPrice.$1(7) , bidder[1].output.winningPrice.$1(7) , bidder[2].output.winningPrice.$1(7) , bidder[3].output.winningPrice.$1(7) []
86 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 80 59 73 ]		//second.$2(7) , seller.output.winningPrice.$2(1) , bidder[0].output.winningPrice.$2(1) , bidder[1].output.winningPrice.$2(3) , bidder[0].output.winningPrice.$2(4) , bidder[1].output.winningPrice.$2(4) , bidder[0].output.winningPrice.$2(5) , bidder[1].output.winningPrice.$2(5) , bidder[2].output.winningPrice.$2(5) , bidder[0].output.winningPrice.$2(6) , bidder[1].output.winningPrice.$2(6) , bidder[2].output.winningPrice.$2(6) , bidder[0].output.winningPrice.$2(7) , bidder[1].output.winningPrice.$2(7) , bidder[2].output.winningPrice.$2(7) , bidder[3].output.winningPrice.$2(7) []
87 gate arity 3 table [ 0 1 0 1 0 0 1 1 ] inputs [ 81 60 73 ]		//second.$3(7) , seller.output.winningPrice.$3(1) , bidder[0].output.winningPrice.$3(1) , bidder[1].output.winningPrice.$3(3) , bidder[0].output.winningPrice.$3(4) , bidder[1].output.winningPrice.$3(4) , bidder[0].output.winningPrice.$3(5) , bidder[1].output.winningPrice.$3(5) , bidder[2].output.winningPrice.$3(5) , bidder[0].output.winningPrice.$3(6) , bidder[1].output.winningPrice.$3(6) , bidder[2].output.winningPrice.$3(6) , bidder[0].output.winningPrice.$3(7) , bidder[1].output.winningPrice.$3(7) , bidder[2].output.winningPrice.$3(7) , bidder[3].output.winningPrice.$3(7) []
88 gate arity 2 table [ 1 0 0 0 ] inputs [ 83 82 ]		// []
89 gate arity 2 table [ 0 0 1 0 ] inputs [ 83 82 ]		// []
90 gate arity 2 table [ 0 1 0 0 ] inputs [ 83 82 ]		// []
91 gate arity 2 table [ 0 0 0 1 ] inputs [ 83 82 ]		// []
